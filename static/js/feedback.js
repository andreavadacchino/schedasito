document.addEventListener('DOMContentLoaded', function () {    const feedbackForm = document.getElementById('feedback-form');    const nameInput = document.getElementById('feedback-name');    const emailInput = document.getElementById('feedback-email');    const subjectInput = document.getElementById('feedback-subject');    const messageInput = document.getElementById('feedback-message');    const notificationArea = document.getElementById('notification-area');    function showNotification(message, isError = false) {        notificationArea.textContent = message;        notificationArea.className = 'p-4 mb-4 rounded-md'; // Reset classes        if (isError) {            notificationArea.classList.add('bg-red-100', 'border', 'border-red-400', 'text-red-700');        } else {            notificationArea.classList.add('bg-green-100', 'border', 'border-green-400', 'text-green-700');        }        notificationArea.style.display = 'block';        setTimeout(() => {            notificationArea.style.display = 'none';            notificationArea.textContent = '';        }, 4000); // Nasconde dopo 4 secondi    }    async function fetchApi(url, options = {}) {        // Per il feedback pubblico, 'credentials: include' potrebbe non essere necessario        // se non ci aspettiamo che l'utente sia loggato o se non vogliamo inviare cookie.        // options.credentials = 'include';        options.headers = {            'Content-Type': 'application/json',            'Accept': 'application/json',            ...options.headers,        };        try {            const response = await fetch(url, options);            if (!response.ok) {                // Non gestiamo 401/403 con redirect qui perché il form è pubblico                const errorData = await response.json().catch(() => ({ message: `Errore ${response.status}` }));                showNotification(errorData.message || `Errore ${response.status}`, true);                return null;            }            return response.status === 204 ? {} : await response.json();        } catch (error) {            showNotification(`Errore di rete: ${error.message}`, true);            return null;        }    }    feedbackForm.addEventListener('submit', async function (event) {        event.preventDefault();        notificationArea.style.display = 'none'; // Pulisce notifiche precedenti        const name = nameInput.value.trim();        const email = emailInput.value.trim();        const subject = subjectInput.value.trim();        const message = messageInput.value.trim();        if (!subject || !message) {            showNotification("Oggetto e Messaggio sono campi obbligatori.", true);            return;        }        const feedbackData = {            name: name, // Può essere stringa vuota se non fornito            email: email, // Può essere stringa vuota se non fornito            subject: subject,            message: message,        };        const result = await fetchApi('/api/feedback', {            method: 'POST',            body: JSON.stringify(feedbackData),        });        if (result) {            showNotification("Feedback inviato con successo! Grazie.", false);            feedbackForm.reset(); // Pulisce il form        }        // In caso di errore, fetchApi ha già mostrato la notifica    });});